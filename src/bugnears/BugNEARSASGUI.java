/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package bugnears;

/**
 *
 * @author c9cf4fd2NTUT
 */
public class BugNEARSASGUI extends javax.swing.JFrame {

    /**
     * Creates new form BugNERRASJFrame
     */
    public BugNEARSASGUI() {
        initComponents();
        tableUpdater = new BugNEARSASTableUpdater();
        sktClient = new BugNEARSASSocketClient();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        FTPTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        HTTPTable = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        VoIPTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        AbnormalBehaviorTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Analyzing and Recording System");

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 982, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 551, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("ISTool", jPanel1);

        FTPTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Time", "IS ID", "Client IP", "Host IP", "File Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        FTPTable.setToolTipText("");
        FTPTable.setColumnSelectionAllowed(true);
        FTPTable.getTableHeader().setReorderingAllowed(false);
        FTPTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FTPTableMouseClicked(evt);
            }
        });
        FTPTable.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                FTPTableComponentResized(evt);
            }
        });
        jScrollPane1.setViewportView(FTPTable);
        FTPTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        FTPTable.getColumnModel().getColumn(0).setMinWidth(120);
        FTPTable.getColumnModel().getColumn(0).setMaxWidth(120);
        FTPTable.getColumnModel().getColumn(1).setMinWidth(100);
        FTPTable.getColumnModel().getColumn(1).setMaxWidth(100);
        FTPTable.getColumnModel().getColumn(2).setMinWidth(120);
        FTPTable.getColumnModel().getColumn(2).setMaxWidth(120);
        FTPTable.getColumnModel().getColumn(3).setMinWidth(120);
        FTPTable.getColumnModel().getColumn(3).setPreferredWidth(70);
        FTPTable.getColumnModel().getColumn(3).setMaxWidth(120);

        jTabbedPane1.addTab("FTP", jScrollPane1);

        HTTPTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Time", "IS ID", "Client IP", "Host DN", "Get Path"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(HTTPTable);

        jTabbedPane1.addTab("HTTP", jScrollPane2);

        VoIPTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Time", "IS ID", "Protocol", "Title 4"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(VoIPTable);

        jTabbedPane1.addTab("VoIP", jScrollPane4);

        AbnormalBehaviorTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(AbnormalBehaviorTable);

        jTabbedPane1.addTab("Abnormal Behavior", jScrollPane3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        if (tableUpdater != null) {
            tableUpdater.stopUpdate();
        }
        int selectedIndex = jTabbedPane1.getSelectedIndex();
        if (selectedIndex == 1) {
            tableUpdater.setUpdateSQLTableName("ftp");
            tableUpdater.setUpdateTable(FTPTable);
            tableUpdater.update();
            tableUpdater.startUpdate();
        }
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void FTPTableComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_FTPTableComponentResized
        FTPTable.scrollRectToVisible(FTPTable.getCellRect(FTPTable.getRowCount() - 1, FTPTable.getRowCount(), true));
    }//GEN-LAST:event_FTPTableComponentResized

    private void FTPTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FTPTableMouseClicked
        int selectedRow = FTPTable.getSelectedRow();
        String path = (String) FTPTable.getModel().getValueAt(selectedRow, 4);
        String ISID = (String) FTPTable.getModel().getValueAt(selectedRow, 1);
        sktClient.getFileFromIS(ISID, path);
        
    }//GEN-LAST:event_FTPTableMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable AbnormalBehaviorTable;
    private javax.swing.JTable FTPTable;
    private javax.swing.JTable HTTPTable;
    private javax.swing.JTable VoIPTable;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
    BugNEARSASTableUpdater tableUpdater;
    BugNEARSASSocketClient sktClient;
}
